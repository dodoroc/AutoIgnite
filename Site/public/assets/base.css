/* == VARS ONLY ===================================================== */

:root  {
  /* =ROW()*100 */
  /* =ROUND((3*A1^2)/35000 - (13*A1)/70 + 754/7) */
  --clr-100: hsl(120, 5%, 90%);
  --clr-200: hsl(120, 5%, 74%);
  --clr-300: hsl(120, 5%, 60%);
  --clr-400: hsl(120, 5%, 47%);
  --clr-500: hsl(120, 5%, 36%);
  --clr-600: hsl(120, 5%, 27%);
  --clr-700: hsl(120, 5%, 20%);
  --clr-800: hsl(120, 5%, 14%);
  --clr-900: hsl(120, 5%, 10%);




  --clr-page-bg: var(--clr-800);
  --clr-text: var(--clr-200);
  --clr-border: var(--clr-300);
  --clr-input-bg: var(--clr-800);
  --clr-input-alt-bg: var(--clr-900);
  --clr-btn-bg: var(--clr-700);
  --clr-btn-alt-bg: var(--clr-400);

}

@media (prefers-color-scheme: light) {
  :root {
  }
}



:root {
  --radius: 0rem;

  --width-min: 360px;
  --width-max: 1050px;
  --width-scrollbar: calc(100vw - 100%);
  --width-available: calc(100vw - (100vw - 100%));

  --font-size-h1: 1.476rem;
  --font-size-h2: 1.383rem;
  --font-size-h3: 1.296rem;
  --font-size-h4: 1.215rem;
  --font-size-h5: 1.138rem;
  --font-size-h6: 1.067rem;
  --font-size-rg: 1.000rem;
  --font-size-sm: 0.937rem;
  --font-size-xs: 0.878rem;

  --font-spc-1_1:  ;
  --font-spc-1_2:  ;
  --font-spc-1_3:  ;
  --font-spc-1_4:  ; /* std width space */


  --clr-darkest:  hsl(0, 0%,  10%);
  --clr-darker:   hsl(0, 0%,  25%);
  --clr-dark:     hsl(0, 0%,  40%);
  --clr-median:   hsl(0, 0%,  50%);
  --clr-light:    hsl(0, 0%,  60%);
  --clr-lighter:  hsl(0, 0%,  75%);
  --clr-lightest: hsl(0, 0%,  90%); /*not used */



  --ctrl-clr-brdr: var(--clr-median);
  --ctrl-clr-bkgd: var(--clr-darker);
  --ctrl-clr-bkgd-focus: var(--clr-darkest);
  --ctrl-clr-text: var(--clr-lighter);

  --ctrl-clr-bkgd-check: var(--clr-median);
  --ctrl-clr-bkgd-hover: var(--clr-darker);
  --ctrl-clr-text-inv: var(--clr-darkest);

  --ctrl-ckrd-gap: 0.62ch;
  --ctrl-ckrd-outer-size: 18px;
  --ctrl-ckrd-inner-size: 10px;
/*  --ctrl-ckrd-outer-size: 16px;*/
/*  --ctrl-ckrd-inner-size: 8px;*/
  --ctrl-ckrd-color: var(--clr-light);

  --ctrl-vsize: 30px;
  --ctrl-pad: 5px;
}




/* == DEFAULT STYLE ================================================= */

html {
  overflow: hidden auto;
  overscroll-behavior: none;

  scrollbar-gutter: stable;
  scrollbar-width: thin;
/*  scrollbar-color: var(--clr-median) var(--clr-darkest);*/

  text-size-adjust: none;
}

html, body {
  margin: 0;
  padding: 0;

  font: normal normal 15px/1.8 tahoma, arial, sans-serif;
}

*, *::before, *::after {
  box-sizing: inherit;
  font: inherit;
}

body {
  position: relative;
  box-sizing: border-box;
  overflow: hidden;


  min-width: var(--width-min);
  max-width: var(--width-max);
  margin: 0 auto;

  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  gap: 20px 0;
  padding: 10px;

  background: var(--clr-page-bg);
  color: var(--clr-text);

  font-size: var(--font-size-rg);
}



/* == SIMPLE STYLED CONTROLS ======================================== */

button, input, select, textarea {
  display: inline-flex;
  align-items: center;
  justify-content: start;

  margin: 0;
  padding: 0 var(--ctrl-pad);

  appearance: none;
/*  outline: solid 1px var(--clr-ring);*/
  outline: 0;
  border: solid 1px var(--clr-border);
  background-color: var(--clr-card);
  color: var(--clr-text);

  transition: background-color 200ms linear;
}

textarea {
  padding: var(--ctrl-pad);
  align-items: start;
}

button, input:is([type="button"], [type="submit"], [type="reset"]) {
  justify-content: center;
}

select:focus, textarea:focus, input:is([type="text"]):focus {
/*  background-color: var(--ctrl-clr-bkgd-focus);*/
}

button:active, input:is([type="button"], [type="submit"], [type="reset"]):active {
/*  background-color: var(--ctrl-clr-bkgd-focus);*/
}

input:is([type="checkbox"], [type="radio"]) {
  display: inline-grid;
  place-content: center;

  padding: 0;
  width: var(--ctrl-ckrd-outer-size);
  height: var(--ctrl-ckrd-outer-size);
}
input:is([type="checkbox"], [type="radio"])::before {
  display: inline-block;
  content: '';

  width: var(--ctrl-ckrd-inner-size);
  height: var(--ctrl-ckrd-inner-size);
  box-shadow: inset 0 0 0px var(--ctrl-ckrd-inner-size) var(--clr-border);
  background-color: var(--clr-page-bg);

  transform: scale(0);
  transition: transform 200ms linear;
}

input:is([type="checkbox"], [type="radio"]):checked::before {
  transform: scale(1);
}

input[type="radio"],
input[type="radio"]::before {
  border-radius: 50%;
}

input:is([type="checkbox"], [type="radio"]):disabled {
/*  box-shadow: var(--clr-dark) !important;*/
}
input:is([type="checkbox"], [type="radio"]):checked:not(:disabled) {
}



label:has([type="checkbox"], [type="radio"]) {
  column-gap: var(--ctrl-ckrd-gap);
}
label:has(+ [type="checkbox"], + [type="radio"]) {
  margin-right: var(--ctrl-ckrd-gap);
}
input:is([type="checkbox"], [type="radio"]) + label {
  margin-left: var(--ctrl-ckrd-gap);
}

label.bordered {
  border: solid 1px var(--clr-border);
/*  background-color: var(--ctrl-clr-bkgd);*/
  padding: 0 var(--ctrl-pad);
  height: var(--ctrl-vsize);
  white-space: nowrap;
}


button, input:is([type="text"]), select {
  height: var(--ctrl-vsize);
}
label {
  display: inline-flex;
  align-items: center;
  justify-content: start;
}

select {
  position: relative;
  background-image: conic-gradient(from 180deg at 50% 100%, #0000 145deg, currentColor 145deg, currentColor 215deg, #0000 215deg);
  background-position: 99.8% 52%;
  background-size: 10px 7px;
  background-origin: content-box;
  background-repeat: no-repeat;
}


/* Switch + switch with label */
input[type="checkbox"].switch {
  container-type: size;
  display: inline-grid;
  place-content: center start;

  padding: 0;
  width: calc(var(--ctrl-ckrd-outer-size) * 2 + 2px);
  height: calc(var(--ctrl-ckrd-outer-size) + 2px);

/*  background: linear-gradient(90deg, var(--ctrl-clr-bkgd-focus) 50%, var(--ctrl-clr-bkgd) 50%);*/
  border: solid 1px var(--clr-btn-bg);
  background-color: var(--clr-btn-bg);
}

input[type="checkbox"].switch:checked {
  background-color: var(--clr-btn-alt-bg);
}

input[type="checkbox"].switch::before {
  content: 'ο';
  display: inline-block;
  text-align: center;
  font-size: 88cqh;
  line-height: 88cqh;

  width: 100cqh;
  height: 100cqh;

  transition: transform 200ms linear;
  transform: translateX(0);
  box-shadow: inset 0 0 0px var(--ctrl-ckrd-inner-size) var(--clr-text);
  background-color: var(--clr-page-bg);
  color: var(--clr-page-bg);
}

input[type="checkbox"].switch:checked::before {
  content: 'ι';
  transform: translateX(100cqh);
}

label:has(input.switch):active {
/*  background-color: var(--ctrl-clr-bkgd-focus);*/
}



/* Fully styled custom select box */
.select-box {
  position: relative;
  display: inline-flex;
  flex-flow: column;
  justify-content: start;
  align-items: stretch;

  height: var(--ctrl-vsize);

  margin: 0;
  padding: 0;
  border: 0;
  color: red;

  user-select: none;
  cursor: default;
}
.select-box::after {
  pointer-events: none;
  position: absolute;
  z-index: 20;
  right: 6px;
  top: 0; bottom: 0;
  display: inline-grid;
  place-content: center;
  font-size: 0.68rem;
  content: '▼';
/*  color: var(--ctrl-clr-text);*/
  transform: scaleX(1.4);
  transition: transform 200ms linear;
}
.select-box:has(:popover-open)::after {
  transform: scale(1.4, -1);
}

.select-box .items {
  position: absolute;
  left: 0; right: 0; top: 0;
  z-index: 10;

  display: flex;
  flex-flow: column;
  justify-content: start;
  align-items: stretch;

  min-height: var(--ctrl-vsize);
  border: solid 1px var(--clr-border);

  margin-top: calc(var(--ctrl-vsize) - 1px);
  transition: margin-top 200ms linear;
}

.select-box .message,
.select-box .items label {
  display: inline-flex;
  flex-flow: row;
  justify-content: start;
  align-items: center;
  padding: 0 var(--ctrl-pad);
  overflow: hidden;
  white-space: nowrap;

  background-color: var(--clr-input-bg);
  color: var(--clr-text);

  transition: background-color 200ms linear;
}

.select-box .message {
  height: var(--ctrl-vsize);
  border: solid 1px var(--clr-border);
}

.select-box .items label {
  height: calc(var(--ctrl-vsize) - 2px);
  transition: height 200ms linear, background-color 200ms linear;
}

.select-box .items label input[type="radio"] {
  position: absolute;
  transform: scale(0);
  appearance: none;
}

.select-box [popover] {
  display: none;
}

.select-box [popover]:popover-open ~ .items label {
  &:has(:checked) {
    background-color: var(--ctrl-clr-bkgd-check);
    color: var(--ctrl-clr-text-inv);
  }
  &:has(:not(:checked)):hover {
    background-color: var(--ctrl-clr-bkgd-hover);
  }
}

.select-box [popover]:not(:popover-open) {
  & ~ .message,
  & ~ .items label:has(:checked) {
    background-color: var(--ctrl-clr-bkgd-hover);
  }
  & ~ .items label:has(:not(:checked)) {
    height: 0;
  }
  & ~ .items {
    margin-top: 0;
  }
}




/* == BASIC/SIMPLE TABLE STYLES ===================================== */

table {
  overflow: hidden;
  padding: 0;
  margin: 0;

  border-spacing: 2px;
  border-collapse: collapse;
  empty-cells: show;

/*  color: var(--clr-lighter);*/
}

table thead td {
  font-weight: 800;
  text-underline-offset: 1px;
/*  text-decoration: underline var(--clr-median);*/
  text-decoration: underline;
}

table td {
  margin: 0;
  padding: 0 5px;
  white-space: nowrap;
  overflow: hidden;

  line-height: 1.667rem;
  border: solid 1px var(--clr-border);
}
table tbody tr td {
  font-size: var(--font-size-sm);
}
table tbody tr td:first-of-type {
  font-size: inherit;
}

table tbody tr:hover td {
  background-color: var(--clr-light);
  color: var(--clr-darkest);
}



/* == FULL PAGE LOADING SPINNER ===================================== */

#spinner {
  display: grid;
  height: calc(100dvh - 10px);
  place-content: center;

  font-size: clamp(24px, 9dvmin, 56px);
  color: #0000;

  background: no-repeat radial-gradient(var(--clr-lighter) 0px, var(--clr-darker) 100px, var(--clr-darkest) 250px);
  background-clip: text;
  background-size: 80cqmin 80cqmin;
  background-position: 50% 50%;
  filter: blur(1.5px);

  animation: 1s infinite spinner;
}
@keyframes spinner {
    0% { background-position: calc(50% +  80.0px) calc(50% +   0.0px) }
    5% { background-position: calc(50% +  76.1px) calc(50% +  24.7px) }
   10% { background-position: calc(50% +  64.7px) calc(50% +  47.0px) }
   15% { background-position: calc(50% +  47.0px) calc(50% +  64.7px) }
   20% { background-position: calc(50% +  24.7px) calc(50% +  76.1px) }
   25% { background-position: calc(50% +   0.0px) calc(50% +  80.0px) }
   30% { background-position: calc(50% + -24.7px) calc(50% +  76.1px) }
   35% { background-position: calc(50% + -47.0px) calc(50% +  64.7px) }
   40% { background-position: calc(50% + -64.7px) calc(50% +  47.0px) }
   45% { background-position: calc(50% + -76.1px) calc(50% +  24.7px) }
   50% { background-position: calc(50% + -80.0px) calc(50% +   0.0px) }
   55% { background-position: calc(50% + -76.1px) calc(50% + -24.7px) }
   60% { background-position: calc(50% + -64.7px) calc(50% + -47.0px) }
   65% { background-position: calc(50% + -47.0px) calc(50% + -64.7px) }
   70% { background-position: calc(50% + -24.7px) calc(50% + -76.1px) }
   75% { background-position: calc(50% +  -0.0px) calc(50% + -80.0px) }
   80% { background-position: calc(50% +  24.7px) calc(50% + -76.1px) }
   85% { background-position: calc(50% +  47.0px) calc(50% + -64.7px) }
   90% { background-position: calc(50% +  64.7px) calc(50% + -47.0px) }
   95% { background-position: calc(50% +  76.1px) calc(50% + -24.7px) }
  100% { background-position: calc(50% +  80.0px) calc(50% +   0.0px) }
}
/*
  let x,y,p, str = '';
  let A = Math.PI / 180 * 18;
  for (let i = 0; i <= 20; i++) {
    x = 80 * Math.cos(i*A);
    y = 80 * Math.sin(i*A);
    x = new String(x.toFixed(1)).padStart(5, ' ');
    y = new String(y.toFixed(1)).padStart(5, ' ');
    p = new String(i*5).padStart(3, ' ');
    str += `  ${p}% { background-position: calc(50% + ${x}px) calc(50% + ${y}px) }\n`;
  }
  console.log(str);
*/

/* Cloak is controlled by Vue in the mounted event */
[cloak] > :not(#spinner) {
  display: none;
}
:not([cloak]) > #spinner {
  display: none !important;
}


/* == MISC STYLES =================================================== */
.hscroll-overflow {
  width: 100%;
  overflow: auto hidden;
}


