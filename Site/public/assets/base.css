/* == VARS ONLY ===================================================== */

:root  {
  /* =ROW()*100 */
  /* =ROUND((3*A1^2)/35000 - (13*A1)/70 + 754/7) */
  --clr-100: hsl(120, 5%, 90%);
  --clr-150: hsl(120, 5%, 82%);
  --clr-200: hsl(120, 5%, 74%);
  --clr-300: hsl(120, 5%, 60%);
  --clr-400: hsl(120, 5%, 47%);
  --clr-500: hsl(120, 5%, 36%);
  --clr-600: hsl(120, 5%, 27%);
  --clr-700: hsl(120, 5%, 20%);
  --clr-800: hsl(120, 5%, 14%);
  --clr-900: hsl(120, 5%, 10%);


  --clr-bkgd: var(--clr-800);
  --clr-text: var(--clr-150);
  --clr-border: var(--clr-400);

  --clr-ctrl-bg: var(--clr-800);
  --clr-ctrl-act-bg: var(--clr-900);

  --clr-option-sel-text: var(--clr-900);
  --clr-option-sel-bg: var(--clr-600);
  --clr-option-hov-bg: var(--clr-700);
/*  --clr-option-hov-text: var(--clr-700);*/

  --clr-switch-bg: var(--clr-500);
  --clr-switch-act-bg: var(--clr-300);
  --clr-switch-btn-bg: var(--clr-700);

  --clr-btn-bg: var(--clr-600);
  --clr-btn-act-bg: var(--clr-800);

}

@media (prefers-color-scheme: light) {
  :root {
  }
}


:root {
  --radius: 0;

  --width-min: 360px;
  --width-max: 1050px;
  --width-scrollbar: calc(100vw - 100%);
  --width-available: calc(100vw - (100vw - 100%));

  --font-size-h1: 1.476rem;
  --font-size-h2: 1.383rem;
  --font-size-h3: 1.296rem;
  --font-size-h4: 1.215rem;
  --font-size-h5: 1.138rem;
  --font-size-h6: 1.067rem;
  --font-size-rg: 1.000rem;
  --font-size-sm: 0.937rem;
  --font-size-xs: 0.878rem;
  --font-size-xx: 0.823rem;

  --font-spc-1_1:  ;
  --font-spc-1_2:  ;
  --font-spc-1_3:  ;
  --font-spc-1_4:  ; /* std width space */



  --ctrl-ckrd-gap: 0.6ch;
  --ctrl-switch-size: 24px;
  --ctrl-switch-radius: 11px;
  --ctrl-ckrd-outer-size: 18px;
  --ctrl-ckrd-inner-size: 10px;
  --ctrl-vsize: 30px;
  --ctrl-pad: 5px;
}




/* == DEFAULT STYLE ================================================= */

html {
  overflow: hidden auto;
  overscroll-behavior: none;
}
@supports (   -moz-text-size-adjust: none) { html {    -moz-text-size-adjust: none } }
@supports (-webkit-text-size-adjust: none) { html { -webkit-text-size-adjust: none } }
@supports (        text-size-adjust: none) { html {         text-size-adjust: none } }
@supports (scrollbar-gutter: stable) {
  html {
    scrollbar-gutter: stable;
    scrollbar-width: thin;
  /*  scrollbar-color: var(--clr-median) var(--clr-darkest);*/
  }
}

html, body {
  margin: 0;
  padding: 0;

  font: normal normal 15px/1.8 tahoma, arial, sans-serif;
}
/*
 and (max-width: 480px) and (resolution: 150dpi) {
 (orientation: landscape)
 (orientation: portrait)
*/
/*
@media only screen and (max-width: 300px) or (max-height: 300px) {
}
@media only screen and (max-width: 300px) or (max-height: 300px) {
}
@media only screen (min-resolution: 2dppx) and (max-width: 1000px) {
  html, body {
    font: 16px/1.6875;
  }
}
*/

@media (orientation: portrait) {
  @media (max-width: 18in) { #dpi::after { content: ' - 18in' } }
  @media (max-width: 16in) { #dpi::after { content: ' - 16in' } }
  @media (max-width: 14in) { #dpi::after { content: ' - 14in' } }
  @media (max-width: 12in) { #dpi::after { content: ' - 12in' } }
  @media (max-width: 10in) { #dpi::after { content: ' - 10in' } }
  @media (max-width:  8in) { #dpi::after { content: ' - 8in' } }
  @media (max-width:  6in) { #dpi::after { content: ' - 6in' } }
  @media (max-width:  4in) { #dpi::after { content: ' - 4in' } }
  @media (max-width:  2in) { #dpi::after { content: ' - 2in' } }
}
@media (orientation: landscape) {
  @media (max-height: 18in) { #dpi::after { content: ' - 18in' } }
  @media (max-height: 16in) { #dpi::after { content: ' - 16in' } }
  @media (max-height: 14in) { #dpi::after { content: ' - 14in' } }
  @media (max-height: 12in) { #dpi::after { content: ' - 12in' } }
  @media (max-height: 10in) { #dpi::after { content: ' - 10in' } }
  @media (max-height:  8in) { #dpi::after { content: ' - 8in' } }
  @media (max-height:  6in) { #dpi::after { content: ' - 6in' } }
  @media (max-height:  4in) { #dpi::after { content: ' - 4in' } }
  @media (max-height:  2in) { #dpi::after { content: ' - 2in' } }
}


*, *::before, *::after {
  box-sizing: inherit;
  font: inherit;
}

body {
  position: relative;
  box-sizing: border-box;
  overflow: hidden;


  min-width: var(--width-min);
  max-width: var(--width-max);
  margin: 0 auto;

  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  gap: 20px 0;
  padding: 10px;

  background: var(--clr-bkgd);
  color: var(--clr-text);

  font-size: var(--font-size-rg);
}



/* == SIMPLE STYLED CONTROLS ======================================== */

:where(label) {
  display: inline-flex;
  align-items: center;
  justify-content: start;
  white-space: nowrap;
}

button, input, select, textarea {
  display: inline-flex;
  align-items: center;
  justify-content: start;

  margin: 0;
  padding: 0 var(--ctrl-pad);

  appearance: none;
/*  outline: solid 1px var(--clr-ring);*/
  outline: 0;
  border: solid 1px var(--clr-border);
  background-color: var(--clr-ctrl-bg);
  color: var(--clr-text);

  transition: background-color 200ms linear;
}

textarea {
  padding: var(--ctrl-pad);
  align-items: start;
}

button, input:is([type="button"], [type="submit"], [type="reset"]) {
  justify-content: center;
  background-color: var(--clr-btn-bg);
}
button:active, input:is([type="button"], [type="submit"], [type="reset"]):active {
  background-color: var(--clr-btn-act-bg);
}

select:focus, textarea:focus, input:not(:is([type="radio"],[type="checkbox"])):focus {
  background-color: var(--clr-ctrl-act-bg);
}


input:is([type="checkbox"], [type="radio"]) {
  display: inline-grid;
  place-content: center;

  padding: 0;
  width: var(--ctrl-ckrd-outer-size);
  height: var(--ctrl-ckrd-outer-size);
}
input:is([type="checkbox"], [type="radio"])::before {
  display: inline-block;
  content: '';

  width: var(--ctrl-ckrd-inner-size);
  height: var(--ctrl-ckrd-inner-size);
  box-shadow: inset 0 0 0px var(--ctrl-ckrd-inner-size) var(--clr-border);

  transform: scale(0);
  transition: transform 200ms linear;
}

input:is([type="checkbox"], [type="radio"]):checked::before {
  transform: scale(1);
}

input[type="radio"],
input[type="radio"]::before {
  border-radius: 50%;
}

input:is([type="checkbox"], [type="radio"]):disabled {
}
input:is([type="checkbox"], [type="radio"]):checked:not(:disabled) {
}


button, input:not(:is([type="radio"],[type="checkbox"])), select {
  height: var(--ctrl-vsize);
}

select {
  position: relative;
  background-image: conic-gradient(from 180deg at 50% 100%, #0000 145deg, var(--clr-border) 145deg, var(--clr-border) 215deg, #0000 215deg);
  background-position: 99.8% 52%;
  background-size: 10px 7px;
  background-origin: content-box;
  background-repeat: no-repeat;
}



/* Switch + switch with label */

/* custome property to allow animation via transition */
@property --switch-offset {
  syntax: '<length>';
  initial-value: 0;
  inherits: true;
}

input[type="checkbox"].switch {
  --switch-width: round(down, calc(var(--ctrl-switch-size) * 1.724), 2px);
  --switch-grad-px-min: calc(var(--ctrl-switch-size) / 2);
  --switch-grad-px-max: calc(var(--switch-width) - var(--switch-grad-px-min) - 2px);

  container-type: size;
  display: inline-grid;
  place-content: center start;

  padding: 0;
  width: var(--switch-width);
  height: var(--ctrl-switch-size);

  background: transparent linear-gradient(90deg, var(--clr-switch-act-bg) var(--switch-offset), var(--clr-switch-bg) var(--switch-offset));
  border: solid 1px var(--clr-border);
  border-radius: var(--ctrl-switch-radius);
  color: var(--clr-300);

  transition: --switch-offset 200ms linear;
  --switch-offset: var(--switch-grad-px-min);
}

input[type="checkbox"].switch:checked {
  --switch-offset: var(--switch-grad-px-max);
}

input[type="checkbox"].switch::before {
  content: 'ο';
  display: inline-block;
  text-align: center;
  font-size: 88cqh;
  line-height: 86cqh;

  width: 100cqh;
  height: 100cqh;

  transition: transform 200ms linear;
  transform: translateX(0);

  box-shadow: unset;
  background-color: var(--clr-switch-btn-bg);
  border-radius: var(--ctrl-switch-radius);
}

input[type="checkbox"].switch:checked::before {
  content: 'ι';
  transform: translateX(calc(100cqw - var(--ctrl-switch-size) + 2px));
}




/* Fully styled custom select box */
.select-box {
  position: relative;
  display: inline-flex;
  flex-flow: column;
  justify-content: start;
  align-items: stretch;

  height: var(--ctrl-vsize);

  margin: 0;
  padding: 0;
  border: 0;
  color: var(--clr-text);

  user-select: none;
  cursor: default;
}

.select-box::after {
  z-index: 2;
  position: absolute;
  right: 8px;
  top: 0; bottom: 0;
  display: inline-grid;
  place-content: center;
  font-size: 0.68rem;
  content: '▼';
  color: var(--clr-border);
  transform: scaleX(1.4);
  transition: transform 200ms linear;
  pointer-events: none;
}
.select-box:has(:popover-open)::after {
  transform: scale(1.4, -1);
}

.select-box .items {
  z-index: 1;
  position: absolute;
  left: 0; right: 0; top: 0;

  display: flex;
  flex-flow: column;
  justify-content: start;
  align-items: stretch;

  min-height: var(--ctrl-vsize);
  border: solid 1px var(--clr-border);

  margin-top: calc(var(--ctrl-vsize) - 1px);
  transition: margin-top 200ms linear;
}

.select-box .message,
.select-box .items label {
  display: inline-flex;
  flex-flow: row;
  justify-content: start;
  align-items: center;
  padding: 0 var(--ctrl-pad);
  overflow: hidden;
  white-space: nowrap;

  background-color: var(--clr-ctrl-bg);
}

.select-box .message {
  height: var(--ctrl-vsize);
  border: solid 1px var(--clr-border);
  transition: background-color 200ms linear;
}

.select-box .items label {
  height: calc(var(--ctrl-vsize) - 2px);
/*  transition: height 200ms linear, background-color 10ms linear 190ms;*/
}

.select-box .items label input[type="radio"] {
  position: absolute;
  transform: scale(0);
  appearance: none;
}

.select-box [popover] {
  display: none;
}

.select-box [popover]:popover-open {
  & ~ .message {
    background-color: var(--clr-ctrl-act-bg);
  }
}

.select-box [popover]:popover-open ~ .items label {
  background-color: var(--clr-ctrl-act-bg);
  transition: height 200ms linear, background-color 10ms linear 190ms;

  &:has(:checked) {
    background-color: var(--clr-option-sel-bg);
  }

  &:has(:not(:checked)):hover {
    background-color: var(--clr-option-hov-bg);
  }
}

.select-box [popover]:not(:popover-open) {
  & ~ .items label {
    transition: height 200ms linear, background-color 10ms linear 0ms;
  }

  & ~ .items label:has(:not(:checked)) {
    height: 0;
  }

  & ~ .items {
    margin-top: 0;
  }
}




/* == BASIC/SIMPLE TABLE STYLES ===================================== */

table {
/*  overflow: hidden;*/
  padding: 0;
  margin: 0;

  border-spacing: 2px;
  border-collapse: collapse;
  empty-cells: show;
}

table thead td {
  font-weight: 800;
  text-underline-offset: 1px;
  text-decoration: underline  var(--clr-border);
  background-color: var(--clr-700);
}

table td {
  margin: 0;
  padding: 0 5px;

  border: solid 1px var(--clr-border);

  white-space: nowrap;
  vertical-align: middle;
  line-height: 1.7rem;
}
table tbody tr td {
  font-size: var(--font-size-sm);
}
table tbody tr td:first-of-type {
  font-size: inherit;
}

table tbody tr:hover td {
  background-color: var(--clr-border);
  color: var(--clr-900);
}



/* == FULL PAGE LOADING SPINNER ===================================== */

#spinner {
  display: grid;
  height: calc(100dvh - 10px);
  place-content: center;

  font-size: clamp(24px, 9dvmin, 56px);
  color: #0000;

  background: no-repeat radial-gradient(var(--clr-200) 0px, var(--clr-600) 100px, var(--clr-800) 250px);
  background-clip: text;
  background-size: 80cqmin 80cqmin;
  background-position: 50% 50%;
  filter: blur(1.5px);

  animation: 1s infinite ani-spinner;
}
@keyframes ani-spinner {
    0% { background-position: calc(50% +  80.0px) calc(50% +   0.0px) }
    5% { background-position: calc(50% +  76.1px) calc(50% +  24.7px) }
   10% { background-position: calc(50% +  64.7px) calc(50% +  47.0px) }
   15% { background-position: calc(50% +  47.0px) calc(50% +  64.7px) }
   20% { background-position: calc(50% +  24.7px) calc(50% +  76.1px) }
   25% { background-position: calc(50% +   0.0px) calc(50% +  80.0px) }
   30% { background-position: calc(50% + -24.7px) calc(50% +  76.1px) }
   35% { background-position: calc(50% + -47.0px) calc(50% +  64.7px) }
   40% { background-position: calc(50% + -64.7px) calc(50% +  47.0px) }
   45% { background-position: calc(50% + -76.1px) calc(50% +  24.7px) }
   50% { background-position: calc(50% + -80.0px) calc(50% +   0.0px) }
   55% { background-position: calc(50% + -76.1px) calc(50% + -24.7px) }
   60% { background-position: calc(50% + -64.7px) calc(50% + -47.0px) }
   65% { background-position: calc(50% + -47.0px) calc(50% + -64.7px) }
   70% { background-position: calc(50% + -24.7px) calc(50% + -76.1px) }
   75% { background-position: calc(50% +  -0.0px) calc(50% + -80.0px) }
   80% { background-position: calc(50% +  24.7px) calc(50% + -76.1px) }
   85% { background-position: calc(50% +  47.0px) calc(50% + -64.7px) }
   90% { background-position: calc(50% +  64.7px) calc(50% + -47.0px) }
   95% { background-position: calc(50% +  76.1px) calc(50% + -24.7px) }
  100% { background-position: calc(50% +  80.0px) calc(50% +   0.0px) }
}
/*
  let x,y,p, str = '';
  let A = Math.PI / 180 * 18;
  for (let i = 0; i <= 20; i++) {
    x = 80 * Math.cos(i*A);
    y = 80 * Math.sin(i*A);
    x = new String(x.toFixed(1)).padStart(5, ' ');
    y = new String(y.toFixed(1)).padStart(5, ' ');
    p = new String(i*5).padStart(3, ' ');
    str += `  ${p}% { background-position: calc(50% + ${x}px) calc(50% + ${y}px) }\n`;
  }
  console.log(str);
*/

/* Cloak is controlled in the vue mounted event */
[cloak] > :not(#spinner) {
  display: none;
}
:not([cloak]) > #spinner {
  display: none !important;
}


/* == MISC STYLES =================================================== */
.hscroll-overflow {
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: stretch;

  width: 100%;
  overflow-x: auto;
}


.circ-sym {
  display: inline-grid;
  place-content: center;

  width: auto;
  height: 1.2em;
  line-height: 1;

  aspect-ratio: 1;
  border: solid 1px currentColor;
  border-radius: 50%;

  font-size: 0.84em;
  font-weight: normal;

  &::before {
    display: inline-block;
  }

  &.nfo::before {
    font-style: italic;
    content: 'i';
  }

  &.qst::before {
    content: '?';
  }

  &.exc::before {
    content: '!';
  }
}

.ckrd-marg {
  --marg-size: 0.67ch;
  &.ckrd-left  input:is([type="checkbox"], [type="radio"]) { margin-left: var(--marg-size) }
  &.ckrd-right input:is([type="checkbox"], [type="radio"]) { margin-right: var(--marg-size) }
  &.ckrd-both  input:is([type="checkbox"], [type="radio"]) { margin-left: var(--marg-size); margin-right: var(--marg-size) }
}

