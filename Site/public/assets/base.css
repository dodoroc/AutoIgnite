/* == VARS ONLY ===================================================== */

:root {
  --clr-darkest:  hsl(0, 0%,  10%);
  --clr-darker:   hsl(0, 0%,  25%);
  --clr-dark:     hsl(0, 0%,  42%);
  --clr-median:   hsl(0, 0%,  50%);
  --clr-light:    hsl(0, 0%,  58%);
  --clr-lighter:  hsl(0, 0%,  75%);
  --clr-lightest: hsl(0, 0%,  90%);

  --clr-warn:     hsl(0, 100%, 53%);

  --font-size-h1: 1.476rem;
  --font-size-h2: 1.383rem;
  --font-size-h3: 1.296rem;
  --font-size-h4: 1.215rem;
  --font-size-h5: 1.138rem;
  --font-size-h6: 1.067rem;
  --font-size-rg: 1.000rem;
  --font-size-sm: 0.937rem;
  --font-size-xs: 0.878rem;

  --font-spc-1_1:  ;
  --font-spc-1_2:  ;
  --font-spc-1_3:  ;
  --font-spc-1_4:  ; /* std width space */

  --char-pad: 0.65ch;


  --width-max: 1050px;

  --width-scrollbar: calc(100vw - 100%);
  --width-available: calc(100vw - (100vw - 100%));

  --ctl-vert-size: 30px;
  --ctl-ckrd-outer-size: 18px;
  --ctl-ckrd-inner-size: 8px;

  --ctrl-clr-bgnd: lightgoldenrodyellow;
  --ctrl-clr-checked: khaki;
  --ctrl-clr-hovered: lightyellow;
  --ctrl-clr-brdr: burlywood;
  --ctrl-clr-text: black;
  --ctrl-vsize: 30px;
  --ctrl-hpad: 0.8ch;
}

@media (prefers-color-scheme: light) {
  :root {
  }
}



/* == DEFAULT STYLE ================================================= */

html {
  overflow: hidden auto;
  overscroll-behavior: none;

  scrollbar-gutter: stable;
  scrollbar-width: thin;
/*  scrollbar-color: var(--clr-median) var(--clr-darkest);*/

  text-size-adjust: none;
}

html, body {
  margin: 0;
  padding: 0;

  font: normal normal 15px/1.8 tahoma, arial, sans-serif;
}

*, *::before, *::after {
  box-sizing: inherit;
  font: inherit;
}

body {
  position: relative;
  box-sizing: border-box;
  overflow: hidden;


  max-width: var(--width-max);
  margin: 0 auto;

  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  gap: 15px 0;
  padding: 10px;

  color: var(--clr-lighter);
  background: var(--clr-darkest);
  font-size: var(--font-size-rg);
}



/* == SIMPLE STYLED CONTROLS ======================================== */

button, input, textarea, select {
  display: inline-flex;
  align-items: center;
  justify-content: start;

  margin: 0;
  padding: 0 var(--char-pad);

  appearance: none;
  color: var(--clr-lighter);
  background-color: var(--clr-darker);
  border: solid 1px var(--clr-median);
  outline: none;
/*  accent-color: var(--clr-median);*/

  transition: 200ms linear;
/*  transition-property: border-color, background-color, color, transform, height;*/
/*  transition-property: border-color, background-color, color, transform;*/
  transition-property: border-color, background-color, color;
}

textarea {
  padding: var(--char-pad);
  align-items: start;
}

button, input:is([type="button"], [type="submit"], [type="reset"]) {
  justify-content: center;
}

textarea:focus, select:focus, input:is([type="text"]):focus {
  background-color: var(--clr-darkest);
  border-color: var(--clr-lighter);
}

button:active, input:is([type="button"], [type="submit"], [type="reset"]):active {
/*  color: var(--clr-darker);*/
/*  background-color: var(--clr-lighter);*/
  outline: solid 1px var(--clr-median);
}

input:is([type="checkbox"], [type="radio"]) {
  display: inline-grid;
  place-content: center;

  padding: 0;
  width: var(--ctl-ckrd-outer-size);
  height: var(--ctl-ckrd-outer-size);
  border: solid 1px var(--clr-median);
/*  vertical-align: text-bottom;*/

/*  color: var(--clr-lighter);*/
}
input:is([type="checkbox"], [type="radio"])::before {
  transition: inherit;
  transition-property: transform;

  display: inline-block;
  content: '';

  width: var(--ctl-ckrd-inner-size);
  height: var(--ctl-ckrd-inner-size);
  box-shadow: inset 0 0 0px var(--ctl-ckrd-outer-size) var(--clr-median);
  transform: scale(0);
}

input:is([type="checkbox"], [type="radio"]):checked::before {
  transform: scale(1);
}

input[type="radio"],
input[type="radio"]::before {
  border-radius: 50%;
}

input:is([type="checkbox"], [type="radio"]):disabled {
  box-shadow: var(--clr-dark) !important;
}
input:is([type="checkbox"], [type="radio"]):checked:not(:disabled) {
}



label {
  white-space: nowrap;
}
label:has([type="checkbox"], [type="radio"]) {
  column-gap: 0.8ch;
}
label:has(+ [type="checkbox"], + [type="radio"]) {
  margin-right: 0.8ch;
}
input:is([type="checkbox"], [type="radio"]) + label {
  margin-left: 0.8ch;
}



input:is([type="text"]),
button,
select {
  height: var(--ctl-vert-size);
/*  line-height: var(--ctl-vert-size);*/
  padding: 0 var(--char-pad);
}
label {
  display: inline-flex;
  align-items: center;
  justify-content: start;
}

select {
  position: relative;
  background-image: conic-gradient(from 180deg at 50% 100%, #0000 145deg, currentColor 145deg, currentColor 215deg, #0000 215deg);
  background-position: 99.8% 52%;
  background-size: 10px 7px;
  background-origin: content-box;
  background-repeat: no-repeat;
}
/*
.tri {
  background-image: conic-gradient(from 180deg at 50% 100%, #0000 145deg, currentColor 145deg, currentColor 215deg, #0000 215deg);
  background-position: 99.8% 52%;
  background-size: 10px 7px;
  background-origin: content-box;
  background-repeat: no-repeat;
}
*/



/* Fully styled custom select box */
.select-box2 {
  position: relative;
  display: inline-flex;
  flex-flow: column;
  justify-content: start;
  align-items: stretch;
  user-select: none;
  cursor: default;
}

.select-box2::after {
  pointer-events: none;
  position: absolute;
  z-index: 10;
  right: 0;
  display: inline-grid;
  place-content: center;
  height: var(--ctl-vert-size);
  font-size: 0.68rem;
  margin-right: 9px;
  padding-top: 2px;
  content: '▼';
  transform: scaleX(1.4);
}
.select-box2:focus::after {
  padding-top: 1px;
  content: '▲';
}

.select-box2 * {
  pointer-events: none;
}

.select-box2 .select-box2__items {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  margin-top: calc(var(--ctl-vert-size) - 1px);

  pointer-events: none;
  color: var(--clr-lighter);
  border: solid 1px var(--clr-median);

  display: flex;
  flex-flow: column;
  justify-content: start;
  align-items: stretch;

  transition: 200ms linear;
  transition-property: margin-top, border;
/*  transition-property: border-color, background-color, color, transform;*/

}


.select-box2 .select-box2__message {
  height: var(--ctl-vert-size);
/*  line-height: var(--ctl-vert-size);*/
  border: solid 1px var(--clr-median);
}

.select-box2 .select-box2__message,
.select-box2 .select-box2__items label {
  display: inline-flex;
  align-items: center;
  justify-content: start;

  padding: 0 var(--char-pad);

  color: var(--clr-lighter);
  background-color: var(--clr-darker);
}

.select-box2 .select-box2__items label {
  height: calc(var(--ctl-vert-size) - 2px);
/*  line-height: calc(var(--ctl-vert-size) - 2px);*/
  border: 0;
  overflow: hidden;

/*  transition: height 200ms linear, background-color 100ms cubic-bezier(0.618, 0.000, 1.000, 1.000) 200ms;*/
  transition: height, background-color 100ms 100ms;
}


.select-box2:focus .select-box2__message,
.select-box2:focus .select-box2__items {
  border-color: var(--clr-lighter);
}

.select-box2:focus .select-box2__message,
.select-box2:focus .select-box2__items label {
  pointer-events: auto;
}
.select-box2:focus .select-box2__items label:has(:checked) {
  color: var(--clr-darker);
  background-color: var(--clr-lighter);
  transition: background-color 100ms 50ms;
}
.select-box2:focus .select-box2__items label:has(:not(:checked)):hover {
  background-color: var(--clr-dark);
}

.select-box2:not(:focus) .select-box2__items {
  margin-top: 0;
}
.select-box2:not(:focus) .select-box2__items label:has(:not(:checked)) {
  height: 0;
}

.select-box2 input {
  position: absolute;
  opacity: 0;
  appearance: none;
}







.select-box {
  position: relative;
  display: inline-flex;
  flex-flow: column;
  justify-content: start;
  align-items: stretch;

  width: 220px;
  height: var(--ctrl-vsize);

  margin: 0;
  padding: 0;
  border: 0;

  user-select: none;
  cursor: default;
}

.select-box .items {
  position: absolute;
  left: 0; right: 0; top: 0;
  z-index: 10;

  display: flex;
  flex-flow: column;
  justify-content: start;
  align-items: stretch;
  border: solid 1px var(--ctrl-clr-brdr);
  transition: margin-top 200ms linear;
}

.select-box .message {
  border: solid 1px var(--ctrl-clr-brdr);
  height: var(--ctrl-vsize);
}

.select-box .message,
.select-box .items label {
  display: inline-flex;
  flex-flow: row;
  justify-content: start;
  align-items: center;
  padding: 0 var(--ctrl-hpad);

  background-color: var(--ctrl-clr-bgnd);
  color: var(--ctrl-clr-text);

  transition: border-color 200ms linear, background-color 200ms linear;
}
.select-box .items label {
  border: 0;
  overflow: hidden;
  height: 0;
  white-space: nowrap;

  transition: height 200ms linear;
}
.select-box .items label:has(:checked) {
  height: var(--ctrl-vsize);
  background-color: var(--ctrl-clr-checked);
}
.select-box .items label:has(:not(:checked)):hover {
  background-color: var(--ctrl-clr-hovered);
}

.select-box .items label input[type="radio"] {
  position: absolute;
  transform: scale(0);
  appearance: none;
}

.select-box [popover] {
  display: none;
}
.select-box [popover]:popover-open + .items label {
  height: var(--ctrl-vsize);
}
.select-box [popover]:popover-open + .items {
  margin-top: calc(var(--ctrl-vsize) - 1px);
}




/* == BASIC/SIMPLE TABLE STYLES ===================================== */

table {
  overflow: hidden;
  padding: 0;
  margin: 0;

  border-spacing: 2px;
  border-collapse: collapse;
  empty-cells: show;

  color: var(--clr-lighter);
}

table thead td {
  font-weight: 800;
  text-underline-offset: 1px;
  text-decoration: underline var(--clr-median);
}

table td {
  margin: 0;
  padding: 0 5px;
  white-space: nowrap;
  overflow: hidden;

  line-height: 1.667rem;
  border: solid 1px var(--clr-median);
}
table tbody tr td {
  font-size: var(--font-size-sm);
}
table tbody tr td:first-of-type {
  font-size: inherit;
}

table tbody tr:hover td {
  background-color: var(--clr-light);
  color: var(--clr-darkest);
}



/* == FULL PAGE LOADING SPINNER ===================================== */

#spinner {
  display: grid;
  height: calc(100dvh - 10px);
  place-content: center;

  font-size: clamp(24px, 9dvmin, 56px);
  color: #0000;

  background: no-repeat radial-gradient(var(--clr-lighter) 0px, var(--clr-darker) 100px, var(--clr-darkest) 250px);
  background-clip: text;
  background-size: 80cqmin 80cqmin;
  background-position: 50% 50%;
  filter: blur(1.5px);

  animation: 1s infinite spinner;
}
@keyframes spinner {
    0% { background-position: calc(50% +  80.0px) calc(50% +   0.0px) }
    5% { background-position: calc(50% +  76.1px) calc(50% +  24.7px) }
   10% { background-position: calc(50% +  64.7px) calc(50% +  47.0px) }
   15% { background-position: calc(50% +  47.0px) calc(50% +  64.7px) }
   20% { background-position: calc(50% +  24.7px) calc(50% +  76.1px) }
   25% { background-position: calc(50% +   0.0px) calc(50% +  80.0px) }
   30% { background-position: calc(50% + -24.7px) calc(50% +  76.1px) }
   35% { background-position: calc(50% + -47.0px) calc(50% +  64.7px) }
   40% { background-position: calc(50% + -64.7px) calc(50% +  47.0px) }
   45% { background-position: calc(50% + -76.1px) calc(50% +  24.7px) }
   50% { background-position: calc(50% + -80.0px) calc(50% +   0.0px) }
   55% { background-position: calc(50% + -76.1px) calc(50% + -24.7px) }
   60% { background-position: calc(50% + -64.7px) calc(50% + -47.0px) }
   65% { background-position: calc(50% + -47.0px) calc(50% + -64.7px) }
   70% { background-position: calc(50% + -24.7px) calc(50% + -76.1px) }
   75% { background-position: calc(50% +  -0.0px) calc(50% + -80.0px) }
   80% { background-position: calc(50% +  24.7px) calc(50% + -76.1px) }
   85% { background-position: calc(50% +  47.0px) calc(50% + -64.7px) }
   90% { background-position: calc(50% +  64.7px) calc(50% + -47.0px) }
   95% { background-position: calc(50% +  76.1px) calc(50% + -24.7px) }
  100% { background-position: calc(50% +  80.0px) calc(50% +   0.0px) }
}
/*
  let x,y,p, str = '';
  let A = Math.PI / 180 * 18;
  for (let i = 0; i <= 20; i++) {
    x = 80 * Math.cos(i*A);
    y = 80 * Math.sin(i*A);
    x = new String(x.toFixed(1)).padStart(5, ' ');
    y = new String(y.toFixed(1)).padStart(5, ' ');
    p = new String(i*5).padStart(3, ' ');
    str += `  ${p}% { background-position: calc(50% + ${x}px) calc(50% + ${y}px) }\n`;
  }
  console.log(str);
*/

/* Hidden is controlled by Vue in the mounted event */
[hidden] > :not(#spinner) {
  display: none;
}
:not([hidden]) > #spinner {
  display: none !important;
}
